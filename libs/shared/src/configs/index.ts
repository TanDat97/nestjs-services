const path = require('path');
require('dotenv').config({ path: path.join(__dirname, '../../../.env') });

export const config = {
  serviceName: process.env.SERVICE_NAME || __dirname?.split('/').pop() || 'app',
  namespace: process.env.NAMESPACE,
  environment: process.env.NODE_ENV || 'dev',
  apiUrl: process.env.API_URL || 'https://huttons-api-gateway-dev.azure-api.net',
  hmsUrl: process.env.HMS_URL || 'https://huttons-hms-dev.redoc.co',
  portalUrl: process.env.PORTAL_URL || 'https://huttons-portal-dev.redoc.co',
  timezone: process.env.REPORT_TIMEZONE || 'Asia/Singapore',
  reportDir: process.env.REPORT_DIR,
  chromeExecutePath: process.env.CHROME_EXECUTE_PATH || '/usr/bin/google-chrome',
  syncConnectionString: process.env.SYNC_SERVICE_CONNECTION_STRING,
  sentryDns: process.env.SENTRY_DNS,
  requestTimeWarn: parseInt(process.env.REQUEST_TIME_WARN || '10000'),
  ingenique: {
    searchUrl: process.env.INGENIQUE_SEARCH_URL,
    token: process.env.INGENIQUE_TOKEN,
    apiKey: process.env.INGENIQUE_API_KEY,
    sectorId: process.env.INGENIQUE_SECTOR_ID,
    accountName: process.env.INGENIQUE_ACCOUNT_NAME,
  },
  sendgrid: {
    active: process.env.SENDGRID_ACTIVE === '1' || false,
    apiKey: process.env.SENDGRID_API_KEY,
    apiKeySecret: process.env.SENDGRID_API_KEY_SECRET,
    from: process.env.SENDGRID_FROM || 'noreply@huttonsgroup.com',
    hrAdmin: process.env.SENDGRID_HR_ADMIN || 'hradmin@huttonsgroup.com',
    resale: process.env.SENDGRID_RESALE || 'resale@huttonsgroup.com',
    it: process.env.SENDGRID_IT || 'it@huttonsgroup.com',
    ar: process.env.SENDGRID_AR,
    cc: process.env.SENDGRID_CC,
    bcc: process.env.SENDGRID_BCC,
    compilanceEmail: process.env.COMPLIANCE_EMAIL || 'compilance@yopmail.com',
    ceaReceived: process.env.SENDGRID_CEA_RECEIVED,
    ceaCC: process.env.SENDGRID_CEA_CC,
  },
  auth: {
    accessKey: process.env.JWT_AUTH_ACCESS_KEY,
    secretKey: process.env.JWT_AUTH_SECRET_KEY,
    resetKey: process.env.JWT_AUTH_RESET_KEY,
    expiresIn: process.env.JWT_AUTH_EXPIRES_IN || '10m',
    refreshExpiresIn: process.env.JWT_AUTH_REFRESH_EXPIRES_IN || '7d',
    grantExpiresIn: process.env.JWT_AUTH_GRANT_EXPIRES_IN || '5m',
    defaultPassword: process.env.ACCOUNT_USE_DEFAULT_PASSWORD || 'Huttons@2023',
  },
  redoc: {
    url: process.env.REDOC_URL || 'https://dev-gateway.redoc.co',
  },
  huttons: {
    url: process.env.HUTTONS_URL || 'https://portal.huttonsgroup.com',
    secret: process.env.HUTTONS_SECRET,
  },
  storage: {
    connectionString: process.env.STORAGE_CONNECTION_STRING,
    container: process.env.STORAGE_CONTAINER_NAME || 'devstorage',
  },
  store: process.env.CACHE_DRIVER || 'redis',
  redis: {
    host: process.env.REDIS_HOST || 'localhost',
    port: process.env.REDIS_PORT || 6379,
    password: process.env.REDIS_PASSWORD || '',
    db: 0,
    max: 1000,
    ttl: process.env.REDIS_TTL || 100 /*seconds*/,
    tls: process.env.REDIS_TLS === 'true',
  },
  ceaCronJobTime: process.env.CEA_CRON_JOB_TIME || '0 0 1 * *',
  maxPayloadSize: parseInt(process.env.MAX_PAYLOAD_SIZE || '64') * 1024 * 1024,
};
